// gradle build script for the aim42 documentation
//
// free software - without guarantee, use at your own risk
// ========================================================


buildscript {
    // these are the BUILDSCRIPT deps - required to execute
    // build targets and -operations
    repositories {
        maven {
            name 'Bintray Asciidoctor repo'
            url  'http://dl.bintray.com/content/aalmiray/asciidoctor'
        }
        maven {
            name 'Bintray Asciidoctor repo'
            url  'http://dl.bintray.com/content/aalmiray/asciidoctor'
        }
   
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath ('org.aim42:HtmlSanityCheck-gradle-plugin:0.5.3')
        classpath ( group: 'org.asciidoctor',
                    name: 'asciidoctor-gradle-plugin',
                    version: '1.5.2')
    }
}


ext {
    srcDir  = new File("$projectDir/src/main")
    targetDir = new File("$buildDir/docs")
}

// =========== asciidoctor stuff ===============
apply plugin: 'org.asciidoctor.convert'

asciidoctor {
    outputDir = targetDir
    sourceDir = new File("$srcDir/asciidoc")
    sources  { include "index.adoc" }
    options backends:  ["html5"],
            doctype: 'book',
            icons: 'font',
            toc: 'left',
            sectlink: true,
            sectanchors: true,
            numbered: true,
            'source-highlighter': 'coderay',
            'coderay-css': 'class',
            stylesheet: 'aim42.css',
            stylesdir: "$srcDir/resources/css/"    
}



defaultTasks 'aim42'

task copyImages(
    type: Copy,
    description: 'copy images into build output folder so that references can be resolved '
) {
    from "$srcDir/resources/images"
    into "$targetDir/images"
}


task copyResources(
    type: Copy,
    description: 'copy (downloadable) resources and artifacts to resource folder'
) {
    from "$srcDir/resources/docs"
    into "$targetDir/resources"
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.10'
}

task aim42(
    dependsOn: [copyResources, copyImages, asciidoctor],
    description: 'collects all required tasks for creating aim42 documentation'
) << { }



task publish(type: GradleBuild) {
    String travisPr = System.getenv('TRAVIS_PULL_REQUEST')
    if ("false".equals(travisPr)) {
        buildFile = 'publish.gradle'
        tasks = ['publishGhPages']
    } else {
        println 'env var TRAVIS_PULL_REQUEST says we build for PR #' + travisPr + ', won\'t publish docs!'
    }
}


// ============ validation

apply plugin: 'org.aim42.HtmlSanityCheck-gradle-plugin'
htmlSanityCheck {

  // ensure asciidoctor->html runs first
  // and images are copied to build directory
  dependsOn asciidoctor, copyImages

  sourceDir = new File( "$buildDir/docs" )

  // files to check, in Set-notation
  sourceDocuments = [ "index.html"]

  // where to put results of sanityChecks...
  checkingResultsDir = new File( "$buildDir/report/htmlchecks" )

  // false: restrict checks to local resources
  // true:  also check external (e.g. http, https...) links.
  checkExternalLinks = false
}
